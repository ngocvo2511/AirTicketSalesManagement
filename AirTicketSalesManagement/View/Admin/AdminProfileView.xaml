<UserControl x:Class="AirTicketSalesManagement.View.Admin.AdminProfileView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:helper="clr-namespace:AirTicketSalesManagement.Helper" 
             xmlns:local="clr-namespace:AirTicketSalesManagement.View.Admin"
             xmlns:notification="clr-namespace:AirTicketSalesManagement.View.Notification"
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="980">

    <UserControl.Resources>
        <!-- Gradient Brushes -->
        <LinearGradientBrush x:Key="HeaderGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#667eea" Offset="0"/>
            <GradientStop Color="#764ba2" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="CardGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#ffffff" Offset="0"/>
            <GradientStop Color="#f8fafc" Offset="1"/>
        </LinearGradientBrush>

        <!-- Card Style -->
        <Style x:Key="InfoCard" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource CardGradient}"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#000000" Opacity="0.1" ShadowDepth="4" BlurRadius="12"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Level Badge Style -->
        <Style x:Key="LevelBadge" TargetType="Border">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#ff6b6b" Offset="0"/>
                        <GradientStop Color="#ee5a24" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="CornerRadius" Value="15"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#ee5a24" Opacity="0.3" ShadowDepth="2" BlurRadius="8"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Field Label Style -->
        <Style x:Key="FieldLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#64748b"/>
            <Setter Property="Margin" Value="0,0,0,4"/>
        </Style>

        <!-- Field Value Style -->
        <Style x:Key="FieldValue" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="#1e293b"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <!-- Tab Button Style -->
        <Style x:Key="TabButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,15"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="#64748b"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="#3b82f6"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#f8fafc"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Update Button Style -->
        <Style x:Key="UpdateButtonStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#3b82f6" Offset="0"/>
                        <GradientStop Color="#1d4ed8" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="20,12"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                CornerRadius="8" Padding="{TemplateBinding Padding}">
                            <Border.Effect>
                                <DropShadowEffect Color="#3b82f6" Opacity="0.3" ShadowDepth="2" BlurRadius="8"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Color="#2563eb" Offset="0"/>
                                            <GradientStop Color="#1e40af" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Security TextBox Style -->
        <Style x:Key="SecurityTextBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="BorderBrush" Value="#e2e8f0"/>
            <Setter Property="BorderThickness" Value="1"/>

            <Setter Property="Height" Value="44"/>
        </Style>

        <!-- Security PasswordBox Style -->
        <Style x:Key="SecurityPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="BorderBrush" Value="#e2e8f0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="44"/>
            <Setter Property="PasswordChar" Value="•"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6" Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Verify Button Style -->
        <Style x:Key="VerifyButtonStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#3b82f6" Offset="0"/>
                        <GradientStop Color="#1d4ed8" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                CornerRadius="6" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Color="#2563eb" Offset="0"/>
                                            <GradientStop Color="#1e40af" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Edit Profile Popup Style -->
        <Style x:Key="EditPopupOverlay" TargetType="Grid">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#000000" Opacity="0.5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEditPopupOpen}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="0" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="1" To="0" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Edit Form Container Style -->
        <!-- Edit Form Container Style -->
        <Style x:Key="EditFormContainer" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="CornerRadius" Value="16"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="650"/>
            <Setter Property="MaxHeight" Value="700"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#000000" Opacity="0.15" ShadowDepth="8" BlurRadius="20"/>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEditPopupOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                         From="0.8" To="1" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                         From="0.8" To="1" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="0" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <!-- Input Field Style -->
        <Style x:Key="EditInputField" TargetType="TextBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,12"/>
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="BorderBrush" Value="#e2e8f0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="44"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8" Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" 
                                  HorizontalScrollBarVisibility="Hidden" 
                                  VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#3b82f6"/>
                                <Setter TargetName="border" Property="Background" Value="White"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#3b82f6" Opacity="0.2" ShadowDepth="0" BlurRadius="8"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#94a3b8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox Toggle Button Template -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="32" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent"/>
                <Border Grid.Column="0" Background="Transparent"/>
                <Path x:Name="Arrow" Grid.Column="1" Fill="#64748b"
              HorizontalAlignment="Center" VerticalAlignment="Center"
              Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="Arrow" Property="Fill" Value="#1e293b"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ComboBox Style -->
        <Style x:Key="EditComboBoxField" TargetType="ComboBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,12"/>
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="BorderBrush" Value="#e2e8f0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="44"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="0" Name="ContentSite" 
                                              IsHitTestVisible="False" 
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="16,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                                    <ToggleButton Grid.Column="1" Name="ToggleButton" 
                                          Template="{StaticResource ComboBoxToggleButton}" 
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                                </Grid>
                            </Border>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" 
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="White" 
                                    BorderThickness="1" BorderBrush="#e2e8f0"
                                    CornerRadius="8" Margin="0,4,0,0">
                                        <Border.Effect>
                                            <DropShadowEffect Color="#000000" Opacity="0.1" ShadowDepth="4" BlurRadius="12"/>
                                        </Border.Effect>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#3b82f6"/>
                                <Setter TargetName="border" Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#94a3b8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- DatePicker Style -->
        <Style x:Key="EditDatePickerField" TargetType="DatePicker">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="BorderBrush" Value="#e2e8f0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="44"/>
            <Setter Property="Padding" Value="16,0"/>
        </Style>

        <!-- Save Button Style -->
        <Style x:Key="SaveButtonStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#10b981" Offset="0"/>
                        <GradientStop Color="#059669" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="24,12"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        CornerRadius="8" Padding="{TemplateBinding Padding}">
                            <Border.Effect>
                                <DropShadowEffect Color="#10b981" Opacity="0.3" ShadowDepth="2" BlurRadius="8"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Color="#059669" Offset="0"/>
                                            <GradientStop Color="#047857" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Cancel Button Style -->
        <Style x:Key="CancelButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#64748b"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="24,12"/>
            <Setter Property="BorderBrush" Value="#e2e8f0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#f8fafc"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#cbd5e1"/>
                                <Setter Property="Foreground" Value="#1e293b"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Field Label Style for Edit Form -->
        <Style x:Key="EditFieldLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="#374151"/>
            <Setter Property="Margin" Value="0,0,0,6"/>
        </Style>


        <!-- Change Password Popup Overlay Style -->
        <Style x:Key="ChangePasswordPopupOverlay" TargetType="Grid">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#000000" Opacity="0.5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChangePasswordPopupOpen}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                        From="0" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                        From="1" To="0" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Change Password Form Container Style -->
        <Style x:Key="ChangePasswordFormContainer" TargetType="Border">
            <Setter Property="Background" Value="White"/>
            <Setter Property="CornerRadius" Value="16"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="500"/>
            <Setter Property="MaxHeight" Value="600"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#000000" Opacity="0.15" ShadowDepth="8" BlurRadius="20"/>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChangePasswordPopupOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                        From="0.8" To="1" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                        From="0.8" To="1" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                        From="0" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Password Field Style -->
        <Style x:Key="EditPasswordField" TargetType="PasswordBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,12"/>
            <Setter Property="Background" Value="#f8fafc"/>
            <Setter Property="BorderBrush" Value="#e2e8f0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="44"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8" Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" 
                                  HorizontalScrollBarVisibility="Hidden" 
                                  VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#dc2626"/>
                                <Setter TargetName="border" Property="Background" Value="White"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#dc2626" Opacity="0.2" ShadowDepth="0" BlurRadius="8"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#94a3b8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Show Password CheckBox Style -->
        <Style x:Key="ShowPasswordCheckBox" TargetType="CheckBox">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="#64748b"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="checkBoxBorder" 
                            Width="18" Height="18" 
                            Background="White"
                            BorderBrush="#d1d5db" 
                            BorderThickness="1.5"
                            CornerRadius="4"
                            Margin="0,0,8,0">
                                <Path x:Name="checkMark"
                                      Data="M 1 6 L 5 10 L 11 2"
                                      Stroke="#10b981"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"
                                      StrokeLineJoin="Round"
                                      Stretch="Uniform"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Width="12" Height="12"/>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="#f0f9ff"/>
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#10b981"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#94a3b8"/>
                                <Setter Property="Foreground" Value="#1e293b"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Change Password Button Style -->
        <Style x:Key="ChangePasswordButtonStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="#dc2626" Offset="0"/>
                        <GradientStop Color="#b91c1c" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="24,12"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        CornerRadius="8" Padding="{TemplateBinding Padding}">
                            <Border.Effect>
                                <DropShadowEffect Color="#dc2626" Opacity="0.3" ShadowDepth="2" BlurRadius="8"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Color="#b91c1c" Offset="0"/>
                                            <GradientStop Color="#991b1b" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#9ca3af"/>
                                <Setter Property="Foreground" Value="#6b7280"/>
                                <Setter TargetName="border" Property="Effect" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Background="#f1f5f9">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header với Gradient -->
        <Border Grid.Row="0" Background="{StaticResource HeaderGradient}" 
                 Padding="30,25">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" VerticalAlignment="Center">
                    <TextBlock Text="Hồ Sơ Nhân Viên" 
                               FontSize="32" FontWeight="Bold"
                               Foreground="White"/>

                </StackPanel>

                <ToggleButton Grid.Column="1" 
                              Template="{StaticResource ProfilePopupTemplate}" 
                              Width="50" Height="50"
                              VerticalAlignment="Center"/>
            </Grid>
        </Border>

        <!-- Main Content -->
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Padding="20">
            <Grid MaxWidth="1200">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Profile Header Card -->
                <Border Grid.Row="0" Style="{StaticResource InfoCard}" Margin="0,20,0,20">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Avatar -->
                        <Border Grid.Column="0" Width="120" Height="120" 
                                Background="White" CornerRadius="60"
                                BorderBrush="#e2e8f0" BorderThickness="3">
                            <Border.Effect>
                                <DropShadowEffect Color="#000000" Opacity="0.1" ShadowDepth="2" BlurRadius="8"/>
                            </Border.Effect>
                            <Grid>
                                <Ellipse Fill="#f1f5f9"/>
                                <Icon:PackIconMaterial Kind="AccountCircle" 
                                                       Width="80" Height="80"
                                                       Foreground="#94a3b8"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"/>
                            </Grid>
                        </Border>

                        <!-- Customer Name & Basic Info -->
                        <StackPanel Grid.Column="1" Margin="30,0,0,0" VerticalAlignment="Center">
                            <TextBlock Text="{Binding HoTen}" 
                                       FontSize="28" FontWeight="Bold"
                                       Foreground="#1e293b"/>
                            <TextBlock Text="{Binding Email}" 
                                       FontSize="16" 
                                       Foreground="#64748b"
                                       Margin="0,4,0,8"/>
                            <StackPanel Orientation="Horizontal">
                                <Icon:PackIconMaterial Kind="Phone" 
                                                       Width="16" Height="16"
                                                       Foreground="#64748b"
                                                       VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding SoDienThoai}" 
                                           FontSize="14" 
                                           Foreground="#64748b"
                                           Margin="8,0,0,0"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Border>

                <!-- ✅ TAB NAVIGATION - PHẦN MỚI ĐƯỢC THÊM -->
                <Border Grid.Row="2" Background="White" Padding="0" Margin="0,0,0,20">
                    <Border.Effect>
                        <DropShadowEffect Color="#000000" Opacity="0.05" ShadowDepth="2" BlurRadius="8"/>
                    </Border.Effect>
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton x:Name="TabTongQuan" Content="Tổng quan" IsChecked="True"
                                      Style="{StaticResource TabButtonStyle}" Click="TabTongQuan_Click"/>
                        <ToggleButton x:Name="TabBaoMat" Content="Bảo mật"
                                      Style="{StaticResource TabButtonStyle}" Click="TabBaoMat_Click"/>
                    </StackPanel>
                </Border>

                <!-- ✅ TAB CONTENT - PHẦN MỚI ĐƯỢC THÊM -->
                <Grid Grid.Row="3" x:Name="TabContent">
                    <!-- ✅ TỔNG QUAN CONTENT -->
                    <Grid x:Name="TongQuanContent" Visibility="Visible">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- ✅ HEADER VỚI NÚT CẬP NHẬT - PHẦN MỚI -->
                        <Grid Grid.Row="0" Margin="8,0,8,20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Column="0" Text="Thông tin tài khoản" 
                                       FontSize="20" FontWeight="Bold"
                                       Foreground="#1e293b"
                                       VerticalAlignment="Center"
                                       Margin="20,0,0,0"/>

                            <Button Grid.Column="1" Content="Cập nhật thông tin"
                                    Style="{StaticResource UpdateButtonStyle}"
                                    Command="{Binding OpenEditProfileCommand}"/>

                            <Separator Grid.Row="1" Background="Black" 
                                    Opacity="0.1" 
                                    Margin="0,10,0,0"/>
                            <Separator Grid.Row="1" Grid.Column="1" Background="Black"     
                                       Opacity="0.1"     
                                       Margin="0,10,0,0"/>

                        </Grid>


                        <!-- Detailed Information Grid - GIỮ NGUYÊN NHƯ CŨ -->
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Mã khách hàng -->
                            <Border Grid.Row="0" Grid.Column="0" Style="{StaticResource InfoCard}">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                                        <Icon:PackIconMaterial Kind="Identifier" 
                                                               Width="20" Height="20"
                                                               Foreground="#3b82f6"/>
                                        <TextBlock Text="Mã Nhân Viên" 
                                                   Style="{StaticResource FieldLabel}"
                                                   Margin="8,0,0,0"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding MaNhanVien}" 
                                               Style="{StaticResource FieldValue}"/>
                                </StackPanel>
                            </Border>

                            <!-- Căn cước công dân -->
                            <Border Grid.Row="0" Grid.Column="1" Style="{StaticResource InfoCard}">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                                        <Icon:PackIconMaterial Kind="CardAccountDetails" 
                                                               Width="20" Height="20"
                                                               Foreground="#10b981"/>
                                        <TextBlock Text="Căn Cước Công Dân" 
                                                   Style="{StaticResource FieldLabel}"
                                                   Margin="8,0,0,0"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding CanCuoc}" 
                                               Style="{StaticResource FieldValue}"/>
                                </StackPanel>
                            </Border>

                            <!-- Giới tính -->
                            <Border Grid.Row="1" Grid.Column="0" Style="{StaticResource InfoCard}">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                                        <Icon:PackIconMaterial Kind="GenderMaleFemale" 
                                                               Width="20" Height="20"
                                                               Foreground="#8b5cf6"/>
                                        <TextBlock Text="Giới Tính" 
                                                   Style="{StaticResource FieldLabel}"
                                                   Margin="8,0,0,0"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding GioiTinh}" 
                                               Style="{StaticResource FieldValue}"/>
                                </StackPanel>
                            </Border>

                            <!-- Ngày sinh -->
                            <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource InfoCard}">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                                        <Icon:PackIconMaterial Kind="Calendar" 
                                                               Width="20" Height="20"
                                                               Foreground="#f59e0b"/>
                                        <TextBlock Text="Ngày Sinh" 
                                                   Style="{StaticResource FieldLabel}"
                                                   Margin="8,0,0,0"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding NgaySinh, StringFormat='{}{0:dd/MM/yyyy}'}" 
                                               Style="{StaticResource FieldValue}"/>
                                </StackPanel>
                            </Border>

                            <!-- Số điện thoại -->
                            <Border Grid.Row="2" Grid.Column="0" Style="{StaticResource InfoCard}">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                                        <Icon:PackIconMaterial Kind="Phone" 
                                                               Width="20" Height="20"
                                                               Foreground="#06b6d4"/>
                                        <TextBlock Text="Số Điện Thoại" 
                                                   Style="{StaticResource FieldLabel}"
                                                   Margin="8,0,0,0"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding SoDienThoai}" 
                                               Style="{StaticResource FieldValue}"/>
                                </StackPanel>
                            </Border>

                            <!-- Email -->
                            <Border Grid.Row="2" Grid.Column="1" Style="{StaticResource InfoCard}">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                                        <Icon:PackIconMaterial Kind="Email" 
                                                               Width="20" Height="20"
                                                               Foreground="#ef4444"/>
                                        <TextBlock Text="Email" 
                                                   Style="{StaticResource FieldLabel}"
                                                   Margin="8,0,0,0"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding Email}" 
                                               Style="{StaticResource FieldValue}"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Grid>

                    <!-- ✅ BẢO MẬT CONTENT - PHẦN HOÀN TOÀN MỚI -->
                    <Grid x:Name="BaoMatContent" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Title -->
                        <TextBlock Grid.Row="0" Text="Bảo mật" 
                                   FontSize="20" FontWeight="Bold"
                                   Foreground="#1e293b"
                                   Margin="28,8,8,18"/>
                        <Separator Grid.Row="1" Background="Black" 
                                   Opacity="0.1" 
                                   Margin="8,0,8,28"/>



                        <!-- Email Section -->
                        <Border Grid.Row="2" Style="{StaticResource InfoCard}" Margin="8,0,8,20">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0">
                                    <TextBlock Text="Email" 
                                               Style="{StaticResource FieldLabel}"
                                               Margin="0,0,0,8"/>
                                    <TextBlock Text="{Binding Email}" 
                                             Style="{StaticResource FieldValue}"
                                             />
                                </StackPanel>


                            </Grid>
                        </Border>

                        <!-- Password Section -->
                        <Border Grid.Row="3" Style="{StaticResource InfoCard}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0">
                                    <TextBlock Text="Mật khẩu" 
                                               Style="{StaticResource FieldLabel}"
                                               Margin="0,0,0,8"/>
                                    <TextBlock x:Name="PasswordBox"
                                                 Text="**********"
                                                Style="{StaticResource FieldValue}"/>
                                </StackPanel>

                                <Button Grid.Column="1" Content="Đổi mật khẩu"
                                        Style="{StaticResource VerifyButtonStyle}"
                                        VerticalAlignment="Bottom"
                                        Command="{Binding OpenChangePasswordCommand}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </Grid>
        </ScrollViewer>
        <!-- ✅ EDIT PROFILE POPUP OVERLAY -->
        <Grid Grid.Row="1" x:Name="EditPopupOverlay" Style="{StaticResource EditPopupOverlay}">
            <Border Style="{StaticResource EditFormContainer}"
            HorizontalAlignment="Center" VerticalAlignment="Center">

                <!-- Header với gradient -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Header -->
                    <Border Grid.Row="0" Background="{StaticResource HeaderGradient}" 
                    CornerRadius="16,16,0,0" Padding="24,20">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0">
                                <TextBlock Text="Chỉnh sửa thông tin" 
                                   FontSize="20" FontWeight="Bold"
                                   Foreground="White"/>

                            </StackPanel>

                        </Grid>
                    </Border>

                    <!-- Form Content -->
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" 
                          MaxHeight="550" Padding="32,24">
                        <StackPanel>
                            <!-- Họ tên -->

                            <!-- Row 1: Email và Số điện thoại -->
                            <Grid Margin="20,20,20,16">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0">
                                    <TextBlock Text="Họ tên" Style="{StaticResource EditFieldLabel}"/>
                                    <TextBox Text="{Binding EditHoTen, UpdateSourceTrigger=PropertyChanged}" 
                                     Style="{StaticResource EditInputField}"/>
                                </StackPanel>

                                <StackPanel Grid.Column="2" >
                                    <TextBlock Text="Số điện thoại" Style="{StaticResource EditFieldLabel}"/>
                                    <TextBox Text="{Binding EditSoDienThoai, UpdateSourceTrigger=PropertyChanged}" 
                                     Style="{StaticResource EditInputField}"/>
                                </StackPanel>
                            </Grid>

                            <!-- Row 2: Giới tính và Ngày sinh -->
                            <Grid Margin="20,10,20,16">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0">
                                    <TextBlock Text="Giới tính" Style="{StaticResource EditFieldLabel}"/>
                                    <ComboBox SelectedValue="{Binding EditGioiTinh}"
                                              SelectedValuePath="Content"
                                      FontSize="14"
                                              Padding="16,8"
                                              >
                                        <ComboBoxItem Content="Nam"/>
                                        <ComboBoxItem Content="Nữ"/>
                                        <ComboBoxItem Content="Khác"/>
                                    </ComboBox>
                                </StackPanel>

                                <StackPanel Grid.Column="2">
                                    <TextBlock Text="Ngày sinh" Style="{StaticResource EditFieldLabel}"/>
                                    <DatePicker SelectedDate="{Binding EditNgaySinh}"  FontSize="14"
                                                            SelectedDateFormat="Short"

                                        Style="{StaticResource MaterialDesignFloatingHintDatePicker}"/>
                                </StackPanel>
                            </Grid>

                            <!-- Căn cước công dân -->
                            <Grid Margin="20,10,20,16">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0">
                                    <TextBlock Text="Căn cước công dân" Style="{StaticResource EditFieldLabel}"/>
                                    <TextBox Text="{Binding EditCanCuoc, UpdateSourceTrigger=PropertyChanged}" 
                                 Style="{StaticResource EditInputField}"/>
                                </StackPanel>

                                <StackPanel Grid.Column="2" >
                                    <TextBlock Text="Email" Style="{StaticResource EditFieldLabel}"/>
                                    <TextBox Text="{Binding EditEmail, UpdateSourceTrigger=PropertyChanged}" 
                                     Style="{StaticResource EditInputField}"/>
                                </StackPanel>
                            </Grid>


                            <!-- Action Buttons -->
                            <Grid Margin="20,10,20,20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" Content="Hủy bỏ"
                                Style="{StaticResource CancelButtonStyle}"
                                Command="{Binding CloseEditPopupCommand}"/>

                                <Button Grid.Column="2" Content="Lưu thay đổi"
                                Style="{StaticResource SaveButtonStyle}"
                                Command="{Binding SaveProfileCommand}">
                                    <Button.Effect>
                                        <DropShadowEffect Color="#10b981" Opacity="0.3" ShadowDepth="2" BlurRadius="8"/>
                                    </Button.Effect>
                                </Button>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Border>
        </Grid>

        <!-- Password -->
        <!-- ✅ CHANGE PASSWORD POPUP OVERLAY -->
        <Grid Grid.Row="1" x:Name="ChangePasswordPopupOverlay" Style="{StaticResource ChangePasswordPopupOverlay}">
            <Border Style="{StaticResource ChangePasswordFormContainer}"
            HorizontalAlignment="Center" VerticalAlignment="Center">

                <!-- Header với gradient -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Header -->
                    <Border Grid.Row="0" Background="{StaticResource HeaderGradient}" 
                    CornerRadius="16,16,0,0" Padding="24,20">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0">
                                <TextBlock Text="Đổi mật khẩu" 
                                   FontSize="20" FontWeight="Bold"
                                   Foreground="White"/>

                            </StackPanel>
                        </Grid>
                    </Border>

                    <!-- Form Content -->
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" 
                          MaxHeight="450" Padding="32,24">
                        <StackPanel>

                            <!-- Mật khẩu hiện tại -->
                            <StackPanel Margin="20,20,20,16">
                                <TextBlock Text="Mật khẩu hiện tại" Style="{StaticResource EditFieldLabel}"/>
                                <Grid>
                                    <TextBox Text="{Binding CurrentPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                             Style="{StaticResource EditInputField}"
                                             Visibility="{Binding IsPasswordVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <PasswordBox x:Name="CurrentPasswordBox" 
                                       Style="{StaticResource EditPasswordField}"
                                       Visibility="{Binding IsPasswordVisible, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                                 helper:PasswordHelper.Attach="True"
                                                 helper:PasswordHelper.BoundPassword="{Binding CurrentPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                </Grid>
                            </StackPanel>

                            <!-- Mật khẩu mới -->
                            <StackPanel Margin="20,20,20,16">
                                <TextBlock Text="Mật khẩu mới" Style="{StaticResource EditFieldLabel}"/>
                                <Grid>
                                    <TextBox Text="{Binding NewPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                             Style="{StaticResource EditInputField}"
                                             Visibility="{Binding IsPasswordVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <PasswordBox x:Name="NewPasswordBox" 
                                       Style="{StaticResource EditPasswordField}"
                                       Visibility="{Binding IsPasswordVisible, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                                 helper:PasswordHelper.Attach="True"
                                                 helper:PasswordHelper.BoundPassword="{Binding NewPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                </Grid>
                            </StackPanel>


                            <!-- Xác nhận mật khẩu -->
                            <StackPanel Margin="20,20,20,16">
                                <TextBlock Text="Mật khẩu mới" Style="{StaticResource EditFieldLabel}"/>
                                <Grid>
                                    <TextBox Text="{Binding ConfirmPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                                             Style="{StaticResource EditInputField}"
                                             Visibility="{Binding IsPasswordVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <PasswordBox x:Name="ConfirmPasswordBox" 
                                       Style="{StaticResource EditPasswordField}"
                                       Visibility="{Binding IsPasswordVisible, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                                 helper:PasswordHelper.Attach="True"
                                                 helper:PasswordHelper.BoundPassword="{Binding ConfirmPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                                </Grid>
                            </StackPanel>

                            <!-- Checkbox hiện mật khẩu -->
                            <StackPanel Margin="20,10,20,20">
                                <CheckBox 
                                Content="Hiện mật khẩu"
                                Style="{StaticResource ShowPasswordCheckBox}"
                                          IsChecked="{Binding IsPasswordVisible, Mode=TwoWay}"/>
                            </StackPanel>

                            <!-- Thông báo lỗi/thành công -->
                            <Border Margin="20,0,20,20" 
                          Background="#fef2f2" 
                          BorderBrush="#fecaca" 
                          BorderThickness="1" 
                          CornerRadius="8" 
                          Padding="12,8"
                          Visibility="{Binding HasPasswordError, Converter={StaticResource BoolToVisibilityConverter}}">
                                <StackPanel Orientation="Horizontal">
                                    <Path Fill="#dc2626" 
                                Data="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,7A1.5,1.5 0 0,1 13.5,8.5A1.5,1.5 0 0,1 12,10A1.5,1.5 0 0,1 10.5,8.5A1.5,1.5 0 0,1 12,7M12,17A5,5 0 0,1 7,12H9A3,3 0 0,0 12,15A3,3 0 0,0 15,12H17A5,5 0 0,1 12,17Z" 
                                Width="16" Height="16" 
                                VerticalAlignment="Center" 
                                Margin="0,0,8,0"/>
                                    <TextBlock Text="{Binding PasswordErrorMessage}" 
                                     FontSize="13" 
                                     Foreground="#dc2626" 
                                     VerticalAlignment="Center"/>
                                </StackPanel>
                            </Border>

                            <!-- Action Buttons -->
                            <Grid Margin="20,10,20,20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" Content="Hủy bỏ"
                                Style="{StaticResource CancelButtonStyle}"
                                Command="{Binding CloseChangePasswordPopupCommand}"/>

                                <Button Grid.Column="2" Content="Đổi mật khẩu"
                                Style="{StaticResource ChangePasswordButtonStyle}"
                                Command="{Binding ChangePasswordCommand}">
                                    <Button.Effect>
                                        <DropShadowEffect Color="#dc2626" Opacity="0.3" ShadowDepth="2" BlurRadius="8"/>
                                    </Button.Effect>
                                </Button>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Border>
        </Grid>
        <notification:NotificationControl x:Name="NotificationControl"
                                DataContext="{Binding Notification}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Panel.ZIndex="1000"/>
    </Grid>
</UserControl>